<?xml version="1.1" encoding="UTF-8" ?>

<Form version="1.6" maxVersion="1.7" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
    <Property name="title" type="java.lang.String" value="Interface Principal"/>
    <Property name="resizable" type="boolean" value="false"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace max="-2" attributes="0"/>
              <Group type="103" groupAlignment="0" attributes="0">
                  <Component id="jScrollPane1" alignment="0" min="-2" pref="533" max="-2" attributes="0"/>
                  <Group type="102" alignment="0" attributes="0">
                      <Component id="jButton1" min="-2" max="-2" attributes="0"/>
                      <EmptySpace type="separate" max="-2" attributes="0"/>
                      <Component id="jButton2" min="-2" max="-2" attributes="0"/>
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
                  </Group>
              </Group>
              <EmptySpace max="-2" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace min="-2" pref="20" max="-2" attributes="0"/>
              <Group type="103" groupAlignment="3" attributes="0">
                  <Component id="jButton1" alignment="3" min="-2" max="-2" attributes="0"/>
                  <Component id="jButton2" alignment="3" min="-2" max="-2" attributes="0"/>
                  <Component id="jLabel1" alignment="3" min="-2" max="-2" attributes="0"/>
              </Group>
              <EmptySpace type="separate" max="-2" attributes="0"/>
              <Component id="jScrollPane1" min="-2" pref="483" max="-2" attributes="0"/>
              <EmptySpace max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_CreateCodeCustom" type="java.lang.String" value="new javax.swing.JScrollPane()"/>
        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
      </AuxValues>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTable" name="jTable1">
          <Properties>
            <Property name="model" type="javax.swing.table.TableModel" editor="org.netbeans.modules.form.RADConnectionPropertyEditor" postCode="for (int x = 0; x &lt; Utils.map.length; x++) {&#xa;    for (int y = 0; y &lt; Utils.map[x].length; y++) {&#xa;        if (Utils.map[x][y] == 1) {&#xa;            jTable1.setValueAt(Color.gray, x, y);&#xa;        }&#xa;        else&#xa;            jTable1.setValueAt(Color.lightGray, x, y);&#xa;    }&#xa;}">
              <Connection code="new MyTableModel()" type="code"/>
            </Property>
            <Property name="cellSelectionEnabled" type="boolean" value="true"/>
            <Property name="showHorizontalLines" type="boolean" value="false"/>
            <Property name="showVerticalLines" type="boolean" value="false"/>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="jTable1.setDefaultRenderer(Color.class, new ColorRenderer(true));&#xa;jTable1.setTableHeader(null);&#xa;&#xa; accidents = space.getSpaceObjectsByType(&quot;accident&quot;);&#xa; cells = space.getSpaceObjectsByType(&quot;cell&quot;);&#xa; homes = space.getSpaceObjectsByType(&quot;homebase&quot;);&#xa; dests = space.getSpaceObjectsByType(&quot;finaldestination&quot;);&#xa; pois = space.getSpaceObjectsByType(&quot;pointofinterest&quot;);&#xa; &#xa;     for (int i = 0; i &lt; accidents.length; i++) {&#xa;         IVector2  accident = (IVector2) accidents[i].getProperty(Space2D.PROPERTY_POSITION);&#xa;         jTable1.setValueAt(Color.red, accident.getYAsInteger(), accident.getXAsInteger());&#xa;     }&#xa;     &#xa;     for (int j = 0; j &lt; homes.length; j++) {&#xa;         IVector2  home = (IVector2) homes[j].getProperty(Space2D.PROPERTY_POSITION);&#xa;         jTable1.setValueAt(Color.yellow, home.getYAsInteger(), home.getXAsInteger());&#xa;     }&#xa;          &#xa;      for (int a = 0; a &lt; dests.length; a++) {&#xa;         IVector2  dest = (IVector2) dests[a].getProperty(Space2D.PROPERTY_POSITION);&#xa;         jTable1.setValueAt(Color.green, dest.getYAsInteger(), dest.getXAsInteger());&#xa;     }&#xa;      &#xa;      for (int b = 0; b &lt; pois.length; b++) {&#xa;         IVector2  poi = (IVector2) pois[b].getProperty(Space2D.PROPERTY_POSITION);&#xa;         jTable1.setValueAt(Color.blue, poi.getYAsInteger(), poi.getXAsInteger());&#xa;     }&#xa;&#xa;&#xa;jTable1.addMouseListener(new java.awt.event.MouseAdapter(){&#xa;&#xa;            public void mouseClicked(java.awt.event.MouseEvent e){&#xa;                int row = jTable1.rowAtPoint(e.getPoint());&#xa;                int col = jTable1.columnAtPoint(e.getPoint());&#xa;               &#xa;                Space2D grid = (Space2D) space;&#xa;                &#xa;                &#xa;                if(jTable1.getValueAt(row, col).equals(Color.gray)){&#xa;                    &#xa;                    Map props = new HashMap();&#xa;                    props.put(&quot;state&quot;, &quot;notavoid&quot;);&#xa;                    props.put(Space2D.PROPERTY_POSITION, new Vector2Int(col, row));&#xa;                    grid.createSpaceObject(&quot;accident&quot;, props, null);&#xa;                    &#xa;                    jTable1.setValueAt(Color.red, row, col);&#xa;                    // Utils.map[row][col]=0;&#xa;               }&#xa;               else if(jTable1.getValueAt(row, col).equals(Color.red)){&#xa;                 jTable1.setValueAt(Color.lightGray, row, col);&#xa;            &#xa;  &#xa;               for(ISpaceObject so : accidents)&#xa;                 {&#xa;                     if(((IVector2)so.getProperty(&quot;position&quot;)).equals(new Vector2Int(col, row) )){&#xa;                          space.destroySpaceObject(so.getId());&#xa;                          Utils.map[row][col]=1;&#xa;                          Utils.acc = so;&#xa;                       }&#xa;                 }&#xa;&#xa;                 for(ISpaceObject ro : cells)&#xa;                 {  &#xa;                    &#xa;                     if(((IVector2)ro.getProperty(&quot;position&quot;)).equals(new Vector2Int(col, row) )){&#xa;                          space.destroySpaceObject(ro.getId());&#xa;                           Utils.map[row][col]=0;}&#xa;                 }&#xa;                       &#xa;                 &#xa;                }&#xa;                else if(jTable1.getValueAt(row, col).equals(Color.lightGray)){&#xa;                       Map props = new HashMap();&#xa;                    props.put(&quot;road&quot;, true);&#xa;                    props.put(Space2D.PROPERTY_POSITION, new Vector2Int(col, row));&#xa;                    grid.createSpaceObject(&quot;cell&quot;, props, null);&#xa;                    jTable1.setValueAt(Color.gray, row, col);&#xa;                    Utils.map[row][col]=1;&#xa;                }&#xa;                accidents = space.getSpaceObjectsByType(&quot;accident&quot;);&#xa;                cells = space.getSpaceObjectsByType(&quot;cell&quot;);&#xa;            }&#xa;&#xa;        });"/>
          </AuxValues>
        </Component>
      </SubComponents>
    </Container>
    <Component class="javax.swing.JButton" name="jButton1">
      <Properties>
        <Property name="text" type="java.lang.String" value="Come&#xe7;ar simula&#xe7;&#xe3;o"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
      </Events>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_VariableModifier" type="java.lang.Integer" value="1"/>
      </AuxValues>
    </Component>
    <Component class="javax.swing.JButton" name="jButton2">
      <Properties>
        <Property name="text" type="java.lang.String" value="R&#xe1;dio"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton2ActionPerformed"/>
      </Events>
    </Component>
    <Component class="javax.swing.JLabel" name="jLabel1">
      <Properties>
        <Property name="text" type="java.lang.String" value="OFF"/>
      </Properties>
    </Component>
  </SubComponents>
</Form>
